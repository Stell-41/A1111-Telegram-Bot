# bot/keyboards.py
from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from services.prompt_logic import load_character_data

def get_character_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞."""
    builder = InlineKeyboardBuilder()
    characters = load_character_data()
    for char_id, char_data in characters.items():
        builder.button(
            text=char_data.get("name", char_id),
            callback_data=f"select_char_{char_id}"
        )
    builder.adjust(1)
    return builder.as_markup()

def get_settings_keyboard(settings: dict) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏."""
    builder = InlineKeyboardBuilder()
    
    builder.button(text=f"Steps: {settings['steps']}", callback_data="edit_setting_steps")
    builder.button(text=f"CFG Scale: {settings['cfg_scale']}", callback_data="edit_setting_cfg_scale")
    builder.button(text=f"Width: {settings['width']}", callback_data="edit_setting_width")
    builder.button(text=f"Height: {settings['height']}", callback_data="edit_setting_height")
    builder.button(
        text=f"Sampler: {settings['sampler_name']}",
        callback_data="edit_setting_sampler_name"
    )
    
    builder.button(text="‚úÖ –ì–æ—Ç–æ–≤–æ, –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º—Ç", callback_data="settings_done")
    
    builder.adjust(2, 2, 1, 1)
    return builder.as_markup()

def get_generation_keyboard(prompt_index: int, total_prompts: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏."""
    builder = InlineKeyboardBuilder()

    prev_index = prompt_index - 1 if prompt_index > 0 else total_prompts - 1
    next_index = prompt_index + 1 if prompt_index < total_prompts - 1 else 0
    
    builder.button(text="‚¨ÖÔ∏è", callback_data=f"nav_{prev_index}")
    builder.button(text=f"{prompt_index + 1}/{total_prompts}", callback_data="ignore")
    builder.button(text="‚û°Ô∏è", callback_data=f"nav_{next_index}")
    
    builder.button(text="üñºÔ∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data=f"generate_img_{prompt_index}")
    builder.adjust(3, 1)
    return builder.as_markup()

def get_admin_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", callback_data="admin_add_char")
    builder.button(text="üì¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª", callback_data="admin_set_channel")
    builder.button(text="‚≠êÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Whitelist", callback_data="admin_manage_whitelist")
    builder.button(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="admin_cancel")
    builder.adjust(1) # –í—Å–µ –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
    return builder.as_markup()

def get_whitelist_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ–ª—ã–º —Å–ø–∏—Å–∫–æ–º."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å ID –≤ Whitelist", callback_data="admin_whitelist_add")
    builder.button(text="‚ûñ –£–¥–∞–ª–∏—Ç—å ID –∏–∑ Whitelist", callback_data="admin_whitelist_remove")
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_back_to_menu")
    builder.adjust(1)
    return builder.as_markup()