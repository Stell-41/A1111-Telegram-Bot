# bot/keyboards.py
from aiogram.types import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from services.prompt_logic import load_character_data

def get_character_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞."""
    builder = InlineKeyboardBuilder()
    characters = load_character_data()
    for char_id, char_data in characters.items():
        builder.button(
            text=char_data.get("name", char_id),
            callback_data=f"select_char_{char_id}"
        )
    builder.adjust(1) # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
    return builder.as_markup()

def get_generation_keyboard(prompt_index: int, total_prompts: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏."""
    builder = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    prev_index = prompt_index - 1 if prompt_index > 0 else total_prompts - 1
    next_index = prompt_index + 1 if prompt_index < total_prompts - 1 else 0
    
    builder.button(text="‚¨ÖÔ∏è", callback_data=f"nav_{prev_index}")
    builder.button(text=f"{prompt_index + 1}/{total_prompts}", callback_data="ignore")
    builder.button(text="‚û°Ô∏è", callback_data=f"nav_{next_index}")
    
    # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    builder.button(text="üñºÔ∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data=f"generate_img_{prompt_index}")
    builder.adjust(3, 1) # 3 –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –≤ —Ä—è–¥, 1 –∫–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥ –Ω–∏–º–∏
    return builder.as_markup()

def get_admin_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", callback_data="admin_add_char")
    builder.button(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="admin_cancel")
    return builder.as_markup()